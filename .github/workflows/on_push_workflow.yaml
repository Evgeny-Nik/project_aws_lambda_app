name: Zip and Upload Lambda Functions

on:
  push:
    paths:
      - 'gitlab_create_user/**'
      - 'csv_to_excel/**'
      - 'discord_message/**'
      - 'gitlab_new_project/**'
      - 'wiki_tops/**'
      - 'backup_lambdas/**'

jobs:
  build_app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and Tag Docker Image
        run: |
          docker build --build-arg APP_VERSION=${{ env.VERSION }} -t ${{ secrets.DOCKERHUB_USERNAME }}/lambda_app:${{ env.VERSION }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/lambda_app:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/lambda_app:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/lambda_app:${{ env.VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/lambda_app:latest

  zip_and_upload_lambda:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function_name:
          - { directory: 'backup_lambdas', function: 'lambda-Backup' }
          - { directory: 'csv_to_excel', function: 'csv_to_excel' }
          - { directory: 'discord_message', function: 'discord_msg' }
          - { directory: 'gitlab_create_user', function: 'gitlab_create_user' }
          - { directory: 'gitlab_new_project', function: 'gitlab_new_project' }
          - { directory: 'wiki_tops', function: 'wikipedia_func' }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Zip Lambda function
        run: |
          cd ${{ matrix.directory }}
          zip ${{ matrix.function }}.zip lambda_function.py
          echo "file zipped"

      - name: Upload to S3
        run: aws s3 cp ${{ matrix.function }}.zip s3://evgeny.lambda.functions/

      - name: Update Lambda function
        run: aws lambda update-function-code --function-name ${{ matrix.function }} --s3-bucket evgeny.lambda.functions --s3-key ${{ matrix.function }}.zip
        echo "lambda updated"
